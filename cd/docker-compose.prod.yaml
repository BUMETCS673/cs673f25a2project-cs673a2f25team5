services:
  backend:
    image: ${DOCKER_USERNAME}/event-manager-backend:${IMAGE_TAG}
    container_name: event-manager-backend-prod
    restart: unless-stopped
    ports:
      - "8000"
    environment:
      # Database connection to external PostgreSQL on EC2
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      # Google OAuth configuration
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_OAUTH_ENABLED: ${GOOGLE_OAUTH_ENABLED}
      # Other environment variables
      ENVIRONMENT: production
      LOG_LEVEL: info
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/dbHealth"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: ${DOCKER_USERNAME}/event-manager-frontend:${IMAGE_TAG}
    container_name: event-manager-frontend-prod
    restart: unless-stopped
    ports:
      - "3000"
    environment:
      # Backend API URL (internal docker network)
      BACKEND_URL: ${BACKEND_URL}
      # Clerk configuration
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLERK_WEBHOOK_SIGNING_SECRET: ${CLERK_WEBHOOK_SIGNING_SECRET}
      CLERK_JWKS_URL: ${CLERK_JWKS_URL}
      NEXT_PUBLIC_MAP_BOX_TOKEN: ${NEXT_PUBLIC_MAP_BOX_TOKEN}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      # Other environment variables
      NODE_ENV: production
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: event-manager-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16